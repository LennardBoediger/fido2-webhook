stages:
  - pull-github
  - build
  - deploy

variables:
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive

pull:
  image: ubuntu:20.04
  tags:
    - uind
  stage: pull-github
  before_script:
    - apt-get update -y
    - apt-get install -y git
  script:
    - mkdir git-magic
    - cd git-magic
    - git clone --mirror --recurse-submodules https://github.com/LennardBoediger/fido2-webhook.git
    - cd fido2-webhook.git/
    - git remote add --mirror=fetch secondary https://git.dotplex.com/lennard.boediger/ci-test-fido2.git
    - git remote set-url secondary https://oauth2:$GITLAB_REPO_KEY@git.dotplex.com/lennard.boediger/ci-test-fido2.git
    - git fetch origin
    - git push secondary --all
    # this worked once ? i dont't get it
    #- git remote rename origin gitlab-origin
    #- git remote add github-origin https://github.com/LennardBoediger/fido2-webhook.git
    #- git fetch github-origin 
    #- git remote set-url gitlab-origin https://oauth2:$GITLAB_REPO_KEY@git.dotplex.com/lennard.boediger/ci-test-fido2.git
    #- git checkout gitlab-origin/master
    #- git merge github-origin/master ?? do i have to do that 
    #- git push --all gitlab-origin

build:
  image: docker:20.10.5
  services:
    - name: docker:dind
      entrypoint: [ "env", "-u", "DOCKER_HOST" ]
      command: [ "dockerd-entrypoint.sh" ]
  stage: build
  before_script:
    - apk update && apk add git
    - apk add bash
    - apk add make
    - apk add python3
  script:
    #- sleep 1h
    - make ci
  variables:
    DOCKER_HOST: tcp://docker:2375/ #just to fix dind issue
    DOCKER_DRIVER: overlay2         #just to fix dind issue
    DOCKER_TLS_CERTDIR: ""          #just to fix dind issue
  artifacts:
    paths:
      - builds/*


build-simulation:
  image: ubuntu:20.04
  tags:
    - uind
  stage: build
  before_script:
    - apt update -y && apt install -y git
    - apt install -y make
    - apt install -y gcc
    - apt install -y python3
    - git submodule update --init --recursive
  script:
    - make all

deploy-release:
  image: ubuntu:20.04
  tags:
    - uind
  stage: deploy
  script:
    - apt-get update -y
    - apt-get install -y git
    - apt-get install -y curl
    - apt-get install -y jq
    - apt-get install -y zip
    - chmod +x ./release.sh
    - ./release.sh
    #- sleep 13h
  environment:
    name: production
  when: manual
  only:
    - master







#test-simulation:
#  tags:
#    - ci
#  stage: test
#  script:
#    - sudo ./main
